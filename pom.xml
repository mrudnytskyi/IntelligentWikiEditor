<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>intelligent.wiki.editor</groupId>
	<artifactId>intelligent.wiki.editor</artifactId>
	<version>0.1.0</version>
	<packaging>jar</packaging>

	<name>Intelligent Wiki Editor</name>
	<description>Intelligent Wiki Editor is Java-based IDE for Wikipedia articles with extended functions</description>

	<licenses>
		<license>
			<name>GNU General Public License v2.0</name>
			<url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html</url>
			<distribution>manual</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Myroslav Rudnytskyi</name>
			<email>myroslav.rudnytskyi@gmail.com</email>
			<roles>
				<role>developer</role>
				<role>architect</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/IntelligentWikiEditor</connection>
		<developerConnection>scm:git:git://github.com/IntelligentWikiEditor</developerConnection>
		<url>https://github.com/mrudnytskyi/IntelligentWikiEditor</url>
	</scm>

	<properties>
		<!-- Project properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Maven plugins properties -->
		<maven.compiler.version>2.3.2</maven.compiler.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<!-- Dependencies versions -->
		<guava.version>15.0</guava.version>
		<dependency.injection.version>1</dependency.injection.version>
		<commons.validation.version>1.4.1</commons.validation.version>
		<groovy.version>2.4.5</groovy.version>
		<sweble.version>2.0.0</sweble.version>
		<hibernate.version>5.1.0.Final</hibernate.version>
		<postgresql.version>9.4-1200-jdbc41</postgresql.version>
		<json.support.version>1.0.4</json.support.version>
		<xstream.version>1.4.8</xstream.version>
		<controls.fx.version>8.40.9</controls.fx.version>
		<richtext.fx.version>0.6.10</richtext.fx.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<!-- Fixes Spring Boot start-up error. See link for details: https://stevewall123.wordpress.com/2015/04/17/spring-boot-application-and-tomcat-error-a-child-container-failed-during-start/ -->
		<tomcat.version>7.0.59</tomcat.version>
	</properties>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.5.RELEASE</version>
	</parent>

	<dependencies>
		<!-- Utility library -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- Dependency injection -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${dependency.injection.version}</version>
		</dependency>
		<!-- Validation -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>${commons.validation.version}</version>
		</dependency>
		<!-- Groovy -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
		</dependency>
		<!-- Sweble library -->
		<dependency>
			<groupId>org.sweble.wikitext</groupId>
			<artifactId>swc-engine</artifactId>
			<version>${sweble.version}</version>
		</dependency>
		<!-- Database -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- PostgreSQL database driver -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<!-- Do not provide version, let String Boot take care with it. See link for details: http://stackoverflow.com/questions/33799743/issue-with-spring-boot-while-upgrading-to-1-3-0-release -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Libraries to work with JSON and XML file formats -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>${json.support.version}</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<!-- Additional JavaFX widgets for GUI -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controls.fx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.fxmisc.richtext</groupId>
			<artifactId>richtextfx</artifactId>
			<version>${richtext.fx.version}</version>
		</dependency>
		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${maven.compiler.encoding}</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
